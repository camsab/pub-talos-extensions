# THIS FILE WAS AUTOMATICALLY GENERATED, PLEASE DO NOT EDIT.
#
# Generated on 2024-05-16T14:34:47Z by kres fe9bc66.

name: default
concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true
"on":
  push:
    branches:
      - main
      - release-*
    tags:
      - v*
  pull_request:
    branches:
      - main
      - release-*
env:
  REGISTRY: registry.camsab.me:443
  USER: "talos"

jobs:
  default:
    permissions:
      actions: read
      contents: write
      issues: read
      packages: write
      pull-requests: read
    runs-on: home-runners
    if: (!startsWith(github.head_ref, 'renovate/') && !startsWith(github.head_ref, 'dependabot/'))
    outputs:
      labels: ${{ steps.retrieve-pr-labels.outputs.result }}
    steps:
      - name: Install make and yq
        run: sudo apt-get update && sudo apt-get install make
      
      - name: checkout
        uses: actions/checkout@v4
        with:
          # need history for `git describe` to work for Talos `Makefile`
          fetch-depth: 0
          fetch-tags: true
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          buildkitd-config-inline: |
            [registry."docker-registry.registry.svc.cluster.local:5000"]
              http = true
          driver: kubernetes
          driver-opts: |
            namespace=actions-runner
            replicas=1
            nodeselector=model=rk1
            limits.memory=2G
            limits.ephemeral-storage=2G
            
      - name: Build
        run: |
          make

      - name: Push to registry
        if: github.event_name != 'pull_request'
        env:
          USERNAME: ${{ github.repository_owner }}
          CI_ARGS: --provenance=true
        run: |
          make
          env:
            PUSH: '1'
            REGISTRY_AND_USERNAME: ${{ env.REGISTRY }}/${{ env.USER }}
            
      - name: Retrieve PR labels
        id: retrieve-pr-labels
        uses: actions/github-script@v7
        with:
          retries: "3"
          script: |
            if (context.eventName != "pull_request") { return "[]" }

            const resp = await github.rest.issues.get({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
            })

            return resp.data.labels.map(label => label.name)
      - name: extensions
        if: github.event_name != 'pull_request'
        env:
          USERNAME: ${{ github.repository_owner }}
          PUSH: "true"
        run: |
          sudo chmod -R 777 /usr/local/bin/
          curl -sL "https://github.com/google/go-containerregistry/releases/download/v0.20.2/go-containerregistry_Linux_arm64.tar.gz" | tar -zxv -C /usr/local/bin/ crane
          curl -sL https://github.com/mikefarah/yq/releases/download/v4.44.5/yq_linux_arm64.tar.gz | tar -zxv -C /usr/local/bin/ ./yq_linux_arm64 --transform="flags=r;s|yq_linux_arm64|yq|"
          make extensions
      - name: release-notes
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          make release-notes
      - name: Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: crazy-max/ghaction-github-release@v2
        with:
          body_path: _out/RELEASE_NOTES.md
          draft: "true"
